trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
# -------- CI Stage -------- #
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build and Test Job'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        cd express-backend
        npm install
      displayName: 'Install backend dependencies'

    - script: |
        cd react-frontend
        npm install
        npm run build
      displayName: 'npm install and build'


    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarQube'  # Name of the service connection
        organization: 'dom1232'  # From sonarcloud.io/orgs/dom1232
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'Dom1232_DevOpsProject'
        cliProjectName: 'DevOpsProject'

    - script: |
        cd express-backend
        npm run test:coverage
      displayName: 'Run unit tests with coverage'

    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud analysis'

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish SonarCloud Quality Gate result'
      
    - script: |
        mkdir -p build_output
        cp -r express-backend build_output/
        cp -r react-frontend/dist build_output/react-frontend-build
      displayName: 'Prepare output for artifact'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'build_output'
        ArtifactName: 'webApp'
        publishLocation: 'Container'
      displayName: 'Publish build artifact'

# -------- Deliver Stage -------- #
- stage: Deliver
  displayName: 'Deliver Artifact'
  dependsOn: Build
  jobs:
  - job: PackageJob
    displayName: 'Artifact Packaging'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'webApp'
        downloadPath: '$(Pipeline.Workspace)'
      displayName: 'Download Build Output'

    - script: |
        mkdir -p output
        cp -r $(Pipeline.Workspace)/webApp/express-backend output/backend
        cp -r $(Pipeline.Workspace)/webApp/react-frontend-build output/frontend
      displayName: 'Bundle backend and frontend'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'output'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish final artifact'
# -------- Deploy to Dev -------- #
- stage: DeployToDev
  displayName: 'Deploy to Dev Env'
  dependsOn: Deliver
  jobs:
  - job: DeployDev
    steps:
    - script: echo "Mock deploy to DEV environment complete."
      displayName: 'Deploying to DEV'

# -------- Deploy to QAT -------- #
- stage: DeployToQAT
  displayName: 'Deploy to QAT Env'
  dependsOn: DeployToDev
  jobs:
  - job: DeployQAT
    steps:
    - script: echo "Mock deploy to QAT environment complete."
      displayName: 'Deploying to QAT'

# -------- Deploy to Staging -------- #
- stage: DeployToStaging
  displayName: 'Deploy to Staging Env'
  dependsOn: DeployToQAT
  jobs:
  - job: DeployStaging
    steps:
    - script: echo "Mock deploy to STAGING environment complete."
      displayName: 'Deploying to STAGING'

# -------- Deploy to Production -------- #
- stage: DeployToProduction
  displayName: 'Deploy to Production Env'
  dependsOn: DeployToStaging
  jobs:
  - job: DeployProd
    steps:
    - script: echo "Mock deploy to PRODUCTION environment complete."
      displayName: 'Deploying to PRODUCTION'
