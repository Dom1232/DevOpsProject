trigger:
- main

pool:
  name: DevOps

stages:
# -------- CI Stage -------- #
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build and Test Job'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        cd express-backend
        npm install
      displayName: 'Install backend dependencies'

    - script: |
        cd react-frontend
        npm install
        npm run build
      displayName: 'npm install and build'


    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarQube'  # Name of the service connection
        organization: 'dom1232'  # From sonarcloud.io/orgs/dom1232
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'Dom1232_DevOpsProject'
        cliProjectName: 'DevOpsProject'

    - script: |
        cd express-backend
        npm run test:coverage
      displayName: 'Run unit tests with coverage'

    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud analysis'

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish SonarCloud Quality Gate result'
      
    - script: |
        mkdir -p $(Build.ArtifactStagingDirectory)/deliver
        cp -r express-backend/* $(Build.ArtifactStagingDirectory)/deliver/backend/
        cp -r react-frontend/dist $(Build.ArtifactStagingDirectory)/deliver/frontend/
      displayName: 'Prepare artifact folder'

# -------- Deliver Stage -------- #
- stage: Deliver
  displayName: 'Deliver Artifact'
  dependsOn: Build
  jobs:
  - job: PackageJob
    displayName: 'Artifact Packaging'
    steps:
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/deliver'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish deliverable artifact''
      '
# -------- Deploy to Dev -------- #
- stage: DeployToDev
  displayName: 'Deploy to Dev Env'
  dependsOn: Deliver
  jobs:
  - job: DeployDev
    steps:
    - script: echo "Mock deploy to DEV environment complete."
      displayName: 'Deploying to DEV'

# -------- Deploy to QAT -------- #
- stage: DeployToQAT
  displayName: 'Deploy to QAT Env'
  dependsOn: DeployToDev
  jobs:
  - job: DeployQAT
    steps:
    - script: echo "Mock deploy to QAT environment complete."
      displayName: 'Deploying to QAT'

# -------- Deploy to Staging -------- #
- stage: DeployToStaging
  displayName: 'Deploy to Staging Env'
  dependsOn: DeployToQAT
  jobs:
  - job: DeployStaging
    steps:
    - script: echo "Mock deploy to STAGING environment complete."
      displayName: 'Deploying to STAGING'

# -------- Deploy to Production -------- #
- stage: DeployToProduction
  displayName: 'Deploy to Production Env'
  dependsOn: DeployToStaging
  jobs:
  - job: DeployProd
    steps:
    - script: echo "Mock deploy to PRODUCTION environment complete."
      displayName: 'Deploying to PRODUCTION'
